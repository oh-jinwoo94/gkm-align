#!/bin/sh

# Input arguments:
N=$1           # Number of gkm-SVM background k-mer weight vectors to generate and average (e.g., N=10 for the manuscript).
n=$2           # Number of DNA sequences to sample for each batch (e.g., n=30,000 for the manuscript).
threshold=$3   # Fraction of genomic sequences to mask (e.g., 0.1 for masking 10% of the genome).


# Paths:
lsgkm_path="./lsgkm/"     # Path to the lsgkm directory (assuming it was cloned here).
gkmalign_path="../../../" # Path to the gkm-align directory. 

# Directories:
sdir="${gkmalign_path}/scripts"              # Directory containing gkm-align scripts.
genome_dir="${gkmalign_path}/data/genomes/"  # Directory with genome data (generated by running setup.sh).

# Optional argument:
exclude="files/hg38_DHS_ATAC_cluster_repr_2_superset.bed"  # Optional file with putative human regulatory regions (set to 'none' if unavailable).



# Step 1: generate a list of all kmers (11-mer)
python ${lsgkm_path}/scripts/nrkmers.py 11 nr11mers.fa


# Step 2: initialize empty file - will be filled through loop interation
printf "" > to_average

# Step 3: Loop to generate N independent gkm-SVM background models, which will be averaged later
for i in $(seq 1 $N) 
do
    # Step 3.1: Sample random genomic sequences from the hg38 genome (outside regulatory regions, if exclude file is provided)
    python ${sdir}/sample_random_genomic_outside.py ${genome_dir}/hg38/ ${exclude}  random_genomic_hg38_L300_n${n}_r${i}.fa 300 ${n} ${i}

    # Step 3.2: Generate random DNA sequences (control sequences) of length 300 and batch size n
    python ${sdir}/gen_random_sequence.py random_generated_L300_n${n}_r${i}.fa 300 ${n} ${i}

    # Step 3.3: Train a gkm-SVM model on sampled genomic sequences against randomly generated sequences (i.e., genomic vs synthetic)
    ${lsgkm_path}/src/gkmtrain -l 11 -k 7 -t 2 random_genomic_hg38_L300_n${n}_r${i}.fa  random_generated_L300_n${n}_r${i}.fa  genomic_model_hg38_L300_n${n}_r${i}

    # Step 3.4: Use the gkm-SVM model to derive a kmer-weight vector
    ${lsgkm_path}/src/gkmpredict  nr11mers.fa genomic_model_hg38_L300_n${n}_r${i}.model.txt  nr11mers_r${i}.weights.out

    # Step 3.5: Adjust for prediction bias in the kmer-weight vector (this is optional, but recommended)
    python ${sdir}/add_rho_kmerweights.py  nr11mers_r${i}.weights.out genomic_model_hg38_L300_n${n}_r${i}.model.txt  nr11mers_genomic_model_hg38_L300_n${n}_r${i}_weights_rho.out  

    # Step 3.6: Append the adjusted weights to the list for averaging
    echo  nr11mers_genomic_model_hg38_L300_n${n}_r${i}_weights_rho.out >> to_average
done

# Step 4: Average the kmer-weights from all N models to get the final averaged model
python ${sdir}/avg_weights.py to_average nr11mers_genomic_model_hg38_L300_n${n}_rAVG_weights_rho.out

# Step 5: Generate the final human genomic background model using the averaged kmer-weights
${gkmalign_path}/bin/train_masker nr11mers_genomic_model_hg38_L300_n${n}_rAVG_weights_rho.out files/trainset_background_hg38-subset.txt ${genome_dir} ${threshold} human_genomic_background_model_p_${threshold}.out



